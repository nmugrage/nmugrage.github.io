<html>
<body>

<h2>The Title</h2>
<link rel="stylesheet" href="Style sheet.css">
<link rel="data" href="data1.js">

<p>Click Here To Create A Title</p>

<body>
    <div id="container">
        <h1 id="theTitle">
            Title Generator
        </h1>
        <p id="intro">Select one of the genres on the list and press 'Generate'. Each generation is added to the stack, which you can save or clear at any point using the buttons below. It's also possible to mix genres while populating a stack.</p>
        <div id="inputs">
            <form id="dropDownList">
                <select id = "drList">
                    <option>Horror</option>
                    <option>Fantasy</option>
                    <option>Science Fiction</option>
                    <option>Literary</option>
                    <option>Experimental</option>
                    <option>Crime</option>
                    <option>Romance</option>
                </select>
            </form>
            <button class="button" onclick="boot();">Generate</button>
        </div>
        <div id="textFrame">
          <p id="theText"></p>
        </div>
        <div id="butts" style="margin-top:2em">
          <button style="background:darkgreen" onclick="actionText(true);" class="button">Save Stack</button>
          <button style="background:darkred" onclick= "actionText(false);" class="button">Clear Stack</button><br>
          <button id="supButt" onclick="location.href = 'https://blog.homeforfiction.com/how-to-support-home-for-fiction/'" class="button" style="background-color:darkcyan; color:ghostwhite;border:0.2em solid darkcyan;font-size:0.8em;margin-top:2em">Support this free – <em>and ad-free</em> – program</button>
          <p id='fooOK' style="display:none;color:greenyellow;font-size:1em;">Saved!</p>
        </div>
        </div>
    </body>
        var selectedGenre = "";
        var cnt = 0;
        var madeWord;
        var randomizedLocale;
        var horrorArray = ["supernatural", "vampire", "werewolf", "demon", "witchcraft", "ghost", "monster", "creature", "nightmare", "madness"];
        var fantasyArray= ["supernatural", "ghost", "witch", "creature", "vampire", "werewolf", "elf", "magician", "amulet", "ring"];
        var scienceFictionArray= ["alien", "computer", "network", "robot", "cyborg", "element", "device", "computer", "galaxy", "planet"];
        var literaryArray = ["memory", "hate", "dismay", "mind", "thoughts", "emotions", "loneliness", "nostalgia", "feelings", "dreams", "vision"];
        var crimeArray = ["detective", "police", "murder", "suspect", "investigation", "crime", "criminal", "robbery", "embassy", "mystery", "spy", "secret"];
        var romanceArray = ["love", "lover", "feelings", "marriage", "solitude", "affair", "passion", "lips", "kiss", "body", "sensual", "prostitute", "playboy", "baron", "aristocrat"];
        var tempArrayVerbs = ["examine", "understand", "see", "behold", "fear", "know", "dream", "escape", "imprison"]; // fallbacks
        var tempArrayNouns = ["man", "woman", "entity", "creature", "being", "vision"];//fallbacks
        var theResult = "";

        var theStreets = ["Highland Avenue","Court Street","North Street","Spring Street","School Street","Prospect Street","Franklin Street","Central Avenue","State Street","West Street","Front Street","Jefferson Street","Cedar Street","Park Place","Locust Street","Bridge Street","Madison Avenue","Jackson Street","Spruce Street","Ridge Road","Laurel Lane","Clinton Street","Beech Street","7th Avenue","5th Street","Poplar Street","Lafayette Avenue","King Street","Holly Drive","Hillside Drive","Heather Lane","Grant Street","Durham Road","Cedar Lane","Buckingham Drive","Ridge Avenue","Mulberry Street","Linden Street","James Street","Front Street","Franklin Avenue","Elm Avenue","College Avenue","Clark Street","Circle Drive","Berkshire Drive","Woodland Avenue","William Street","Smith Street","Shady Lane","Oxford Court","Myrtle Avenue","Maple Lane","Lafayette Street","John Street","Hilltop Road","Highland Drive","Hamilton Street","Fulton Street","Euclid Avenue","Essex Court","Creek Road","Canal Street","Cambridge Drive","Cambridge Court","Arch Street","Windsor Drive","Willow Lane","Village Drive","Valley View Drive","Sycamore Drive","Skyline Drive","Route 9","Race Street","Overlook Drive","Orange Street","Olive Street","Oak Avenue","Montgomery Avenue","Manor Drive","Magnolia Court","Magnolia Avenue","Madison Court","Locust Lane","Lilac Lane","Ivy Lane","Heritage Drive","Hemlock Drive","Glenwood Avenue","Garden Street","Forest Drive","Deerfield Drive","Clover Lane","Carriage Drive","Cardinal Drive","Canterbury Court","Rosewood Drive","Orchard Street","Orchard Lane","Lantern Lane","Howard Street","Grove Avenue","Grand Avenue","Garfield Avenue","Evergreen Drive","Elmwood Avenue","Devon Road","Clay Street","Chestnut Avenue","Belmont Avenue","Augusta Drive","Arlington Avenue","8th Avenue","5th Street ","4th Street","3rd Street","Willow Drive","Warren Avenue","Victoria Drive","Sunset Avenue","Strawberry Lane","School Lane","Mechanic Street","Maplewood Drive","Magnolia Street","Linda Lane","Laurel Drive","Juniper Court","Inverness Drive","Hickory Street","Henry Street","Forest Avenue","Fawn Lane","Evergreen Lane","Edgewood Drive","East Avenue","Country Lane","Cottage Street","Cooper Street","Cleveland Street","Church Street","Cemetery Road","Cedar Court","Canterbury Drive","Cambridge Road","Brown Street","Beechwood Drive","9th Street","8th Street","York Street","Woodlawn Avenue","Willow Avenue","Washington Street","Victoria Court","Valley Drive","Taylor Street","Sycamore Street","Street Road","Sherman Street","Rose Street","Rose Lane","Roosevelt Avenue","Pin Oak Drive","Perry Street","Park Lane","Oakland Avenue","Oak Drive","Mulberry Lane","Michigan Avenue","Lexington Avenue","Lawrence Street","Laurel Avenue","Jackson Avenue","Independence Drive","Holly Court","Hillcrest Avenue","Hampton Court","Grandview Drive","Franklin Court","Edgewood Road","Douglas Avenue","Devonshire Drive","Old York Road","Old Mill Road","Oakwood Drive","Norwood Avenue","North Avenue","Mulberry Court","Meadow Street","Maryland Avenue","Maple Drive","Lincoln Drive","Lexington Drive","Lexington Court","Juniper Drive","Johnson Street","Ivy Court","Hudson Street","Horseshoe Lane","Holly Lane","Heather Road","Heather Court","Hamilton Court","Girard Avenue","Forest Street","Fawn Court","Eagle Road","Douglas Street","Depot Street","Danbury Court","Dale Road","Crestview Drive","Coolidge Avenue","Church Street ","Canterbury Lane","Broad Street ","Brentwood Drive","Williams Road","Wellington Drive","Weiss Street","Wedgewood Drive","Walnut Lane","Union Street ","Tyler Court","Timber Lane","Sycamore Lane","Sutton Place","Summit Drive","Summer Street","Spruce Avenue","Somerset Drive","Scott Street","Russell Avenue","Riverside Avenue","Red Oak Drive","Queen Street","Poplar Court","Plymouth Road","Plum Street","Pearl Street","Morningside Drive","Monroe Drive","Meadowview Drive","Meadow Drive","Marshall Street","Larkspur Lane","Lakeside Drive","Iris Lane","Huntington Drive","Horseshoe Drive","Homestead Drive","Highland Court","Hickory Drive","Heather Drive","Harvest Lane","Greenhill Road","Green Lane","Glendale Road","Georgia Avenue","Franklin Street ","Franklin Street","Fox Run Drive","Federal Street","Fairview Road","Elmwood Drive","Edgewood Avenue","Eagle Street","Durham Court","Dogwood Court","David Drive","Cypress Lane","Lakeview Court","Lake Drive","Kingsley Court","Kent Road","Kensington Drive","Kelly Drive","Juniper Street","Howard Avenue","Hillside Road","Hillcrest Road","High Street","Hickory Court","Hemlock Lane","Hawthorne Street","Harding Avenue","Hanover Court","Hampton Drive","Hampshire Drive","Grace Street","Goldenrod Court","Franklin Street","Forest Lane","Fieldstone Court","Ferry Street","Fairfield Drive","Fairfax Court","Evergreen Road","Easton Road","Cricket Lane","Crestwood Drive","Constitution Drive","Congress Street","Concord Road","Columbia Avenue","Colonial Court","Cobblestone Lane","Chestnut Drive","Chatham Road","Chatham Court","Center Road","Center Avenue","Cardinal Lane","Bristol Court","Bridle Court","Brandywine Court","Birch Street","Birch Drive","Bayberry Lane","Bayberry Drive","Barclay Court","Azalea Court","Autumn Lane","Autumn Drive","Aspen Drive","Ashley Drive","Ash Street","Applewood Drive","Amherst Street","Adams Drive","9th Avenue","Yorktown Drive","Windsor Lane","Windsor Circle","Willow Court","Washington Street","Washington Lane","Ward Street","Village Lane","Vernon Avenue","Vance Street","University Avenue","Union Street","Township Line Road","Timothy Drive","Taylor Avenue","Surrey Court","Sunrise Court","Stratford Road","State Street","Spruce Drive","Spring Drive","Sheffield Court","Scarlet Oak Drive","Saratoga Drive","Rose Avenue","Ridgeview Drive","Revere Court","Regency Drive","Regency Court","Princeton Avenue","Poplar Road","Poplar Lane","Pine Lane","Pine Grove Road","Palomino Drive","Paddock Drive","Overhill Road","North Street","Normandy Drive","Morrison Drive","Morris Road","Morris Avenue","Montgomery Street","Monroe Avenue","Mockingbird Lane","Mill Creek Road","Midland Road","Middle Street","Mercer Street","Meadowbrook Lane","Meadow Road","McKinley Avenue","May Street","Martin Street","Marshall Avenue","Market Street","Manchester Drive","Mallard Lane","Longwood Drive","Lakeshore Drive","Knollwood Drive","Kings Court","Jones Street","Jennifer Lane","Irving Street","Iris Court","Hunter Drive","Houston Street","Hope Street","Homestead Court","Holly Avenue","Hilltop Drive","Hillside Lane","High Street","Heritage Court","Hastings Drive","Hanover Street","Hamilton Avenue","Greystone Drive","Grant Court","Franklin Street","Franklin Drive","Foxcroft Drive","Fox Run Road","Forrest Avenue","Forest Road","Forest Court","Fieldstone Lane","Evergreen Avenue","Elm Street","Elizabeth Court","Eastwood Drive","Dorchester Road","Devonshire Court","Delaware Street","Deerfield Road","Cypress Street","Coventry Lane","Commerce Street","White Oak Road","Pine Valley Drive","Pine Drive","Park Street","Park Avenue","Pacific Street","Oxford Circle","Orchard Drive","Orchard Court","Old Lancaster Road","Ohio Street","Ocean Avenue","Oakwood Avenue","Oakmont Drive","Oak Street","Oak Court","Nottingham Lane","Northridge Drive","Moore Street","Montrose Avenue","Montgomery Avenue","Miller Street","Michael Drive","Meadowbrook Road","Matthew Drive","Mason Street","Mary Street","Marshall Drive","Manor Road","Linden Place","Lewis Street","Lenape Lane","Lake Road","Lafayette Drive","Knox Court","Kings Road","King Road","Jefferson Drive","Huntington Street","Hunters Run","Hunter Lane","Honeysuckle Lane","Highland Road","Hidden Lake Drive","Heron Court","Hawthorne Drive","Hawthorne Court","Hanover Road","Hanover Drive","Hampton Road","Hamilton Drive","Greenwood Avenue","Green Valley Road","Goshen Road","Glenview Drive","Glen Road","Georgetown Road","Garden Avenue","Front Street","Florida Avenue","Florence Avenue","Fawn Drive","Farmington Avenue","Falcon Court","Fairview Drive","Exeter Court","Evergreen Court","Easy Street","Eagle Drive","Driftwood Drive","Dove Court","Davis Street","Daisy Lane","Crescent Avenue","Creamery Road","Court Street","County Line Road","Cottage Lane","Conshohocken State Road","Church Lane","Chester Street","Chase Road","Charles Drive","Central Street","Center Street ","Carriage Way","Carol Lane","Cambridge Circle","Buttonwood Lane","Buckingham Court","Brighton Road","Bridgewater Drive","Briarwood Lane","Bradley Street","Boxwood Drive","Bowman Avenue","Bluebird Lane","Blue Ridge Drive","Birch Court","Berkley Road","Belmont Drive","Beechwood Avenue","Bedford Court","Barclay Road","Barberry Lane","Baltimore Pike","Baltimore Avenue","Autumn Court","Ascot Court","Apple Street","Andover Drive","Anderson Avenue","Amherst Court","Albany Avenue","Adams Court","Aberdeen Drive","3rd Avenue","38th Street","20th Street","Yorktown Court","Wynnewood Drive","Woodstream Drive","Woods Road","Woodbine Avenue","Wisteria Lane","Wisconsin Avenue","Windward Way","Windsor Way","Wilson Drive","Willowbrook Drive","Willow Way","Williams Avenue","Wexford Court","Westminster Court","Westgate Drive","Wells Street","Washington Road","Washington Drive","Washington Court","Walnut Street ","Walnut Place","Walker Avenue","Violet Lane","Village Court","Victor Street","Valley Court","University Drive","Tyler Drive","Twin Oaks Drive","Turnberry Drive","Tremont Street","Thistle Lane","Terrace Avenue","Temple Street","Taylor Drive","Sycamore Road","Sunrise Drive","Sullivan Drive","Stockton Court","Stirrup Lane","Station Avenue","St James Place","Spring Meadow Drive","Spring Hill Drive"," Boulevard","Sheridan Avenue","Shenandoah Drive","Sheffield Lane","Seneca Drive","Scott Avenue","Schuyler Street","Salem Court","Saddlebrook Drive","Royal Court","Roberts Avenue","Riverview Road","Ridgewood Road","Ridgewood Drive","Ridgeview Road","Ridge Lane","Revere Drive","Redwood Court","Rebecca Drive","Raymond Street","Quarry Road","Quail Drive","Putnam Road","Princeton Drive","Primrose Drive","Plymouth Drive","Plantation Drive","Pine Court","Pierce Street","Pheasant Drive","Persimmon Drive","Patriot Drive","Parkside Avenue","Park Avenue","Oxford Street","Oxford Place","Orleans Street","Orchard Way","Old State Road","Nottingham Road","Nottingham Court","North Boulevard","Noble Street","Newton Street","Murray Avenue","Muirfield Court","Mountain View Drive","Mountain Road","Morgan Lane","Morgan Avenue","Miller Avenue","Midland Avenue","Middle Road","Michael Road","Meadowlark Lane","Meadowlark Drive","Meadowbrook Drive","Mary Court","Martin Lane","Martin Drive","Market Street","Marion Street","Marion Avenue","Maple Road","Mackinaw Road","London Court","Locust Avenue","Livingston Street","Lisa Lane","Lippincott Avenue","Linden Lane","Limekiln Pike","Liberty Lane","Lexington Road","Lenox Street","Kingston Road","Kingston Drive","Kingsley Road","Keystone Drive","Juniper Lane","Jefferson Street","Jay Street","Jasmine Drive","Jacksonville Road","Ironwood Drive","Inverness Lane","Independence Way","Independence Lane","Hunters Way","Hudson Avenue","Hollow Road","Hilltop Court","Hill Road","High Street","Hemmeter Road","Hedgerow Lane","Hedgerow Drive","Harvest Road","Harvest Drive","Harvard Drive","Harvard Avenue","Hampton Lane","Guilford Court","Greenwood Court","Greenwich Street","Greenbriar Court","Grant Drive","Grand Street","Grace Court","Goldenrod Lane","Golden Drive","Genesee Street","Garden Road","Garden Drive","Fox Lane","Fox Hollow Drive","Florence Drive","Firethorn Drive","Finch Court","Ferry Lane","Fernwood Avenue","Erie Street","Emerald Drive","Eisenhower Drive","Edwards Street","Edward Drive","Edgewater Drive","Eaton Court","East Drive","Eagle Court","Durham Drive","Dorset Drive","Dolington Road","Derby Drive","Deerfield Lane","Deerfield Circle","Deer Run Court","Dawn Drive","Davis Drive","Dartmouth Drive","D Street","Cypress Avenue","Cumberland Road","Cromwell Drive","Crest Road","Cranberry Court","Cooper Drive","Concord Place","Concord Drive","Concord Court","Concord Avenue","Collins Drive","Cobblestone Drive","Clark Avenue","Cherry Alley","Chelsea Road","Chapel Drive","Center Street","Center Road","Castle Drive","Carriage Lane","Carlisle Avenue","Canal Street ","Cabot Court","C Street","Butternut Drive","Butler Avenue","Brookwood Drive","Brookview Drive","Brookside Avenue","Brook Street","Briarwood Road","Wesley Court","Wayne Drive","Waverly Road","Waverly Place","Waterford Drive","Waterford Court","Water Street ","Water Street","Walnut Avenue","Walker Road","Walden Way","Village Way","Village Road","Valley View Lane","Union Avenue","Tulip Street","Tulip Road","Tulip Lane","Tulip Drive","Truman Court","Tower Hill Road","Timber Drive","Thomas Drive","Teal Court","Taylor Road","Tara Court","Tamarack Court","Sylvan Street","Sweetbriar Drive","Swamp Road","Sunset Court","Sunnybrook Drive","Sunny Lane","Summit Court","Sturbridge Drive","Stratford Court","Stonegate Drive","Stone Street","Stevens Avenue","Sterling Road","State Street","Stanford Drive","Providence Drive","Prospect Avenue","Princeton Road","Princeton Court","Primrose Court","Presidential Drive","Porter Street","Poplar Drive","Pleasant Valley Drive","Pintail Court","Pinewood Drive","Pinehurst Drive","Pine Road","Pin Oak Court","Pilgrim Lane","Pike Street","Persimmon Court","Penny Lane","Penn Avenue","Pebble Lane","Pearl Street ","Payne Street","Patriots Way","Patriot Lane","Partridge Lane","Paddock Circle","Overbrook Drive","Orange Avenue","Old Bethlehem Road","Oak Street ","North Road","Newton Avenue","Newport Avenue","Newark Road","Morrison Avenue","Morris Drive","Monroe Street","Mohawk Drive","Mitchell Street","Mimosa Lane","Millstone Drive","Militia Hill Road","Michael Lane","Meeting House Lane","Meadowview Lane","Meadow Glen Drive","Meadow Court","McKinley Street","Mayflower Drive"];

        var magicalLocales = ["forest", "lake", "fields", "meadows", "path", "passage", "gorge", "valley", "hill", "mountain", "ocean", "archipelago", "sea", "island", "plains", "road"];

        var sciFiLocales = ["planet", "nebula", "galaxy", "spaceship", "moon", "colony", "habitat", "asteroid"];
<p id="demo"></p>
<script>
function output(set1) {
    var output = [string(set1), string(set2)]
    output.sort(function(a, b){return 3 - Math.random()});
    var outputfinal =  output.slice(1,3)
    document.getElementById("demo4").innerHTML = outputfinal.toString() 
}
</script>

function getWordArray(theWord) {
    return new Promise(function (resolve, reject) {
        resolve($.get('https://api.datamuse.com/words?ml=' + theWord + '&topics='+ theWord + '&max=30'));
    });
}
function getAdjective(theWord) {
    return new Promise(function (resolve, reject) {
        resolve($.get('https://api.datamuse.com/words?rel_jjb=' + theWord));
    });
}
function getNoun(theWord) {
    return new Promise(function (resolve, reject) {
        resolve($.get('https://api.datamuse.com/words?rel_jja=' + theWord));
    });
}
function getVerb(theWord) {
    return new Promise(function (resolve, reject) {
        resolve($.get('https://api.datamuse.com/words?rc=' + theWord + '&md=p'));
    });
}
function boot() {
  var theList = document.getElementById("drList");
  theResult = "";
  selectedGenre = theList.options[theList.selectedIndex].text;
  //
  switch (selectedGenre) {
      case "Horror":
          getWordArray(randomFromArray(horrorArray)).then(function(obj){
      randomizedLocale = (" " + RiTa.evaluate('(at|of)') + " " + randomFromArray(theStreets));
              makeSentence(obj);
          });
          break;
      case "Fantasy":
    madeWord = "";
    madeWord += getRi(3);
    madeWord += getRi(2);
    madeWord += getRi(2);
      getWordArray(randomFromArray(fantasyArray)).then(function(obj){
      randomizedLocale = (" of " + madeWord + " " + randomFromArray(magicalLocales));
              makeSentence(obj);
          });
          break;
      case "Science Fiction":
    madeWord = "";
    madeWord += getRi(3);
    madeWord += getRi(2);
    madeWord += getRi(2);
      getWordArray(randomFromArray(scienceFictionArray)).then(function(obj){
      randomizedLocale = (" of " + madeWord + " " + randomFromArray(sciFiLocales.concat(magicalLocales)));
              makeSentence(obj);
          });
          break;
      case "Literary":
      getWordArray(randomFromArray(literaryArray)).then(function(obj){
      randomizedLocale = (" " + RiTa.evaluate('(at|of)') + " " + randomFromArray(theStreets));
              makeSentence(obj);
          });
          break;
      case "Experimental":
    madeWord = "";
    madeWord += getRi(3);
    madeWord += getRi(2);
    madeWord += getRi(2);
    getWordArray(RiTa.randomWord({ pos: "nn"})).then(function(obj){
      randomizedLocale = (" " + madeWord);
              makeSentence(obj);
          });
          break;
      case "Crime":
      getWordArray(randomFromArray(crimeArray)).then(function(obj){
      randomizedLocale = (" " + RiTa.evaluate('(at|of)') + " " + randomFromArray(theStreets));
              makeSentence(obj);
          });
          break;
      case "Romance":
    getWordArray(randomFromArray(romanceArray)).then(function(obj){
      randomizedLocale = (" of the " + randomFromArray(magicalLocales));
              makeSentence(obj);
          });
          break;
  }
  //
}

function makeSentence(obj) {
    var nounArr = [];
	var adjArr = [];
	var nounArrFallBack = ["being", "creature", "form"];
	var adjArrFallBack = ["interesting", "unique", "peculiar", "odd", "unknown", "marvelous", "fantastic", "curious"];
    var noun1;
    var adj1;
    var phrase01;

    for (var i=0;i<obj.length;i++) {
        if (RiTa.isNoun(obj[i].word)) {
            nounArr.push(obj[i].word);
        }
        else  if (RiTa.isAdjective(obj[i].word)) {
            adjArr.push(obj[i].word);
        }
    }
	
	if (nounArr.length < 1) {
		for (var i=0;i<nounArrFallBack.length;i++) {
			nounArr.push(nounArrFallBack[i]);
		}
	}
	if (adjArr.length < 1) {
		for (var i=0;i<adjArrFallBack.length;i++) {
			adjArr.push(adjArrFallBack[i]);
		}
	}

    noun1 = randomFromArray(nounArr);
	if (noun1=="in") {
		noun1 = RiTa.randomWord({ pos: "nn"});//fallback
	}
    if (Math.random() < 0.5) {
        noun1 = RiTa.singularize(noun1);
    }
    else {
        noun1 = RiTa.pluralize(noun1);
    }
    adj1 = randomFromArray(adjArr);
    
    if (Math.random() < 0.5) {
        phrase01 = (" " + RiTa.evaluate('(in the attic| in the mansion| in the house| in the basement| in the room|in ' + RiTa.evaluate('(his | her )') + ' subconscious |in ' + RiTa.evaluate('(his | her )') + ' mind| in the meadows|in the forest|)'));
    }
    else {
        phrase01 = (" " + randomizedLocale);
    }

    //
    var theOption = getRndInteger(1,10); // number of…numbers greater than 8 indicate possibilities of simple (default) title
    switch(theOption) {
        case 1:
            theResult = titleCase("The " + noun1 + phrase01);
            showResult();
            break;
        case 2:
            getAdjective(noun1).then(function(obj){
                var adjObj = randomFromArray(obj)
				if (adjObj==undefined) {
					adjObj = RiTa.randomWord({ pos: "jj"});//fallback
				}
                theResult = titleCase("The " + adjObj.word + " " + noun1);
				if (Math.random() < 0.5) {
					theResult += titleCase(randomizedLocale);
				}
                showResult();
            });
            break;
        case 3:
            getNoun(adj1).then(function(obj){
                var nounObj = randomFromArray(obj);
				if (nounObj==undefined) {
					nounObj = RiTa.randomWord({ pos: "nn"});//fallback
				}
                theResult = titleCase("The " + adj1 + " " + nounObj.word);
				if (Math.random() < 0.5) {
					theResult += titleCase(randomizedLocale);
				}
                showResult();
            });
            break;
        case 4:
			getVerb(noun1).then(function(obj){
				var tmpArrV = [];
				var tmpArrN = [];
				for (var i=0;i<obj.length;i++) {
					if (obj[i].tags != undefined) {
						if (obj[i].tags.includes("v")) {
							tmpArrV.push(obj[i].word);
						}
						else if (obj[i].tags.includes("n") && RiTa.isNoun(obj[i].word)) {
							tmpArrN.push(obj[i].word);
						}
					}
				}
				if (tmpArrN.length < 2) {
					tmpArrN = tempArrayNouns;
				}
				if (tmpArrV.length < 2) {
					tmpArrV = tempArrayVerbs;
				}
				var nounPhrase;
				if (Math.random() < 0.5) {
					nounPhrase = (RiTa.evaluate('(the | )') + " " + RiTa.pluralize(noun1));
				}
				else {
					nounPhrase = ("the " + RiTa.singularize(noun1));
				}
                var verbObj = randomFromArray(tmpArrV);
				var nounObj = randomFromArray(tmpArrN);
				if (Math.random() < 0.5) {
					theResult = titleCase(RiTa.conjugate(verbObj, {form: RiTa.GERUND}) + " " + nounPhrase);
				}
				else {
					theResult = titleCase("The " + nounObj + " that " + RiTa.conjugate(verbObj, {tense: RiTa.PAST}) + " " + nounPhrase);
				}
				if (Math.random() < 0.5) {
					theResult += titleCase(randomizedLocale);
				}
                showResult();
            });
            break;
        case 5:
			var adjObj;
		     getAdjective(noun1).then(function(obj){
                adjObj = randomFromArray(obj);
				if (adjObj==undefined) {
					adjObj = RiTa.randomWord({ pos: "jj"});//fallback
				}
				getNoun(adj1).then(function(obj2){
					var nounObj = randomFromArray(obj2);
					if (nounObj==undefined) {
						nounObj = RiTa.randomWord({ pos: "nn"});//fallback
					}
					theResult = titleCase(adjObj.word + " " + RiTa.pluralize(noun1) + " and the " + adj1 + " " + nounObj.word);
					if (Math.random() < 0.5) {
						theResult += titleCase(randomizedLocale);
					}
					showResult();
				});
            });
            break;
		case 6:
			getVerb(noun1).then(function(obj){
				var tmpArrV = [];
				var tmpArrN = [];
				for (var i=0;i<obj.length;i++) {
					if (obj[i].tags != undefined) {
						if (obj[i].tags.includes("v")) {
							tmpArrV.push(obj[i].word);
						}
						else if (obj[i].tags.includes("n") && RiTa.isNoun(obj[i].word)) {
							tmpArrN.push(obj[i].word);
						}
					}
				}
				if (tmpArrN.length < 2) {
					tmpArrN = tempArrayNouns;
				}
				if (tmpArrV.length < 2) {
					tmpArrV = tempArrayVerbs;
				}
				var nounPhrase;
				if (Math.random() < 0.5) {
					nounPhrase = (RiTa.evaluate('(the | )') + " " + RiTa.pluralize(noun1));
				}
				else {
					nounPhrase = ("the " + RiTa.singularize(noun1));
				}
                var verbObj = randomFromArray(tmpArrV);
				var nounObj = randomFromArray(tmpArrN);
				if (nounObj=="in") {
					nounObj = RiTa.randomWord({ pos: "nn"});//fallback
				}
				if (Math.random() < 0.5) {
					theResult = titleCase(RiTa.evaluate('(as|when|how)') + " " + RiTa.evaluate('(I|she|he)') + " " + RiTa.conjugate(verbObj, {tense: RiTa.PAST}) + " " + nounPhrase);
				}
				else {
					theResult = titleCase("The " + nounObj + " " + RiTa.conjugate(verbObj, {form: RiTa.GERUND}) + " " + nounPhrase);
				}
				if (Math.random() < 0.5) {
					theResult += titleCase(randomizedLocale);
				}
                showResult();
            });
			break;		
		case 7:
			getVerb(noun1).then(function(obj){
				var tmpArr = [];
				for (var i=0;i<obj.length;i++) {
					if (obj[i].tags != undefined) {
						if (obj[i].tags.includes("v")) {
							tmpArr.push(obj[i].word);
						}
					}
				}
				if (tmpArr.length < 2) {
					tmpArr = tempArrayVerbs;
				}
                var verbObj = randomFromArray(tmpArr);
                theResult = titleCase("To " + RiTa.conjugate(verbObj, {tense: RiTa.INFINITIVE}) + " " + RiTa.evaluate('('+RiTa.singularize(noun1)+').art()'));
                showResult();
            });
			break;
		case 8:
			getVerb(noun1).then(function(obj){
				var tmpArr = [];
				for (var i=0;i<obj.length;i++) {
					if (obj[i].tags != undefined) {
						if (obj[i].tags.includes("v")) {
							tmpArr.push(obj[i].word);
						}
					}
				}
				if (tmpArr.length < 2) {
					tmpArr = tempArrayVerbs;
				}
                var verbObj = randomFromArray(tmpArr);
                theResult = titleCase(RiTa.conjugate(verbObj, {tense: RiTa.INFINITIVE}) + " the " + RiTa.singularize(noun1));
                showResult();
            });
			break;		
		default: 
			if (Math.random() < 0.5) {
				theResult = titleCase("The " + adj1 + " " + noun1);
			}
			else {
				theResult = titleCase(RiTa.evaluate('('+adj1+').art()') + " " + RiTa.singularize(noun1));
			}
            showResult();
    }

}

function showResult() {
	if (cnt>0) {
		$("#theText").append("<br><hr>");
	}
	else {
		$("#theText").html("");
	}
	var sp = document.createElement("span");
	sp.setAttribute("id", ("span"+cnt));
	document.getElementById("theText").appendChild(sp);
	$("#span"+cnt).hide();
	$("#span"+cnt).html(theResult);
	$("#span"+cnt).fadeIn(1500);
	scrollBot('textFrame');
	cnt++;
}

//
function getRndInteger(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
function titleCase(str) {
    var splitStr = str.toLowerCase().split(' ');
    for (var i = 0; i < splitStr.length; i++) {
        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     
    }
    return splitStr.join(' '); 
 }
function randomFromArray(items) {
    return items[Math.floor(Math.random()*items.length)];
}
function getRi(n) {
  return RiTa.randomWord().slice(0,n);
}
function actionText(b) {
	if (cnt==0) {
		$("#theText").html("<span style='color:darkred'>The list is empty!</span>");
	}
	else {
		if (b) {
			var hiddenElement = document.createElement('a');
			hiddenElement.href = 'data:attachment/text,' + encodeURI(document.getElementById('theText').innerText);
			hiddenElement.target = '_blank';
			hiddenElement.download = 'TitleGenerator.txt';
			hiddenElement.click();
			$("#fooOK").fadeIn(1000);
			setTimeout(function(){
				$("#fooOK").fadeOut(1500);
			}, 1500);
		}
		else {
			cnt=0;
			$("#theText").html("");
		}
	}
}

const scrollBot = (id) => {
    const element = $(`#${id}`);
    element.animate({
        scrollTop: element.prop("scrollHeight")
    }, 500);
}
